openapi: '3.0.3'
info:
    title: 'casino'
    version: 1.0.0
servers:
    -   url: 'http://localhost:8081/casino'
paths:
    /player/{playerId}/balance:
        get:
            summary: Get player's balance
            operationId: getBalance
            tags:
                - balance
            parameters:
                - name: playerId
                  in: path
                  required: true
                  schema:
                      type: integer
                      format: int64
            responses:
                '200':
                    description: 'Successfully retrieved balance'
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/BalanceResponseDTO"
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /player/{playerId}/balance/update:
        post:
            summary: Update player's balance
            operationId: updateBalance
            tags:
                - balance
            parameters:
                - name: playerId
                  in: path
                  required: true
                  schema:
                      type: integer
                      format: int64
            requestBody:
                description: "Update balance request body"
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateBalanceRequestDTO'
            responses:
                '200':
                    description: 'Successfully Operation'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateBalanceResponseDTO'
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /admin/player/transactions:
        post:
            summary: customer transaction history
            operationId: retrieveTransactionHistory
            tags:
                - transactions
            requestBody:
                description: "customer transaction history"
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/TransactionHistoryRequestDTO'
            responses:
                '200':
                    description: 'Successfully Operation'
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/TransactionHistoryResponseDTO'
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

components:
    schemas:
        BalanceResponseDTO:
            type: object
            properties:
                playerId:
                    type: integer
                    format: int64
                    example: 123
                balance:
                    type: number
                    example: 23.8
                    minimum: 0.0
        UpdateBalanceRequestDTO:
            type: object
            properties:
                amount:
                    type: number
                    minimum: 0.0
                    example: 14.4
                transactionType:
                    type: string
                    enum: [WAGER, WIN]
                    example: WAGER
        UpdateBalanceResponseDTO:
            type: object
            properties:
                transactionId:
                    type: string
                    example: bb13de06-d52e-11ec-9d64-0242ac120002
                balance:
                    type: number
                    minimum: 0.0
                    example: 2.0
        TransactionHistoryRequestDTO:
            type: object
            properties:
                username:
                    type: string
        TransactionHistoryResponseDTO:
            type: object
            properties:
                transactions:
                    type: array
                    items:
                        $ref: '#/components/schemas/TransactionDTO'
        TransactionDTO:
            type: object
            properties:
                transactionType:
                    type: string
                    enum: [WAGER, WIN]
                    example: WIN
                transactionId:
                    type: string
                    example: 8727hhg
                amount:
                    type: number
                    minimum: 0.0
                    example: 23.9
        Error:
            type: object
            required:
                - code
                - message
            properties:
                code:
                    type: integer
                    format: int32
                message:
                    type: string
        Problem:
            type: object
            properties:
                type:
                    type: string
                    format: uri
                    description: |
                        An absolute URI that identifies the problem type.  When dereferenced,
                        it SHOULD provide human-readable documentation for the problem type
                        (e.g., using HTML).
                    default: 'about:blank'
                    example: 'https://zalando.github.io/problem/constraint-violation'
                title:
                    type: string
                    description: |
                        A short, summary of the problem type. Written in english and readable
                        for engineers (usually not suited for non technical stakeholders and
                        not localized);
                    example: Service Unavailable
                status:
                    type: integer
                    format: int32
                    description: |
                        The HTTP status code generated by the origin server for this occurrence
                        of the problem.
                    minimum: 100
                    maximum: 600
                    exclusiveMaximum: true
                    example: 503
                detail:
                    type: string
                    description: |
                        A human readable explanation specific to this occurrence of the
                        problem.
                    example: Connection to database timed out
                instance:
                    type: string
                    format: uri
                    description: |
                        An absolute URI that identifies the specific occurrence of the problem.
                        It may or may not yield further information if dereferenced.
    responses:
        Problem:
            description: error occurred - see status code and problem object for more information.
            content:
                'application/problem+json':
                    schema:
                        $ref: '#/components/schemas/Problem'

    securitySchemes:
        jwt:
            type: http
            description: JWT Authentication
            scheme: bearer
            bearerFormat: JWT
security:
    - jwt: []
